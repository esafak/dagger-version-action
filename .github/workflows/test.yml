name: Test Dagger Version Action

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  test-repositories:
    name: Test ${{ matrix.repository }}${{ matrix.use_path && ' with path' || ' without path' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - repository: 'dagger/registry-redirect'
            use_path: false
          - repository: 'dagger/agents'
            use_path: true
            path: 'melvin'

    steps:
      # Checkout the action's code
      - name: Checkout action code
        uses: actions/checkout@v4
        with:
          path: 'action'

      # Checkout the target repository
      - name: Checkout ${{ matrix.repository }}
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repository }}
          path: '.'

      # Test with or without path parameter based on matrix
      - name: Test action
        id: test_action
        uses: ./action
        with:
          path: ${{ matrix.use_path && matrix.path || '' }}

      # Display result
      - name: Display test results
        run: |
          REPO="${{ matrix.repository }}"
          PATH_INFO="${{ matrix.use_path && format(' (Path: {0})', matrix.path) || ' (Root)' }}"
          VERSION="${{ steps.test_action.outputs.version }}"
          
          echo "Repository: $REPO$PATH_INFO"
          echo "Dagger version: $VERSION"
          
          # Validate that we got a version
          if [ -z "$VERSION" ]; then
            echo "Error: No version was returned"
            exit 1
          fi
          echo "✅ Test passed: Version detected as $VERSION"

  test-local-file:
    name: Test with local dagger.json
    runs-on: ubuntu-latest
    steps:
      # Checkout the action's code
      - name: Checkout action code
        uses: actions/checkout@v4

      # Create a test dagger.json in the root
      - name: Create test dagger.json
        run: |
          echo '{"engineVersion": "0.9.3"}' > dagger.json

      # Test without path parameter
      - name: Test with local file
        id: test_local
        uses: ./

      # Display result
      - name: Display test results
        run: |
          VERSION="${{ steps.test_local.outputs.version }}"
          
          echo "Using local dagger.json"
          echo "Dagger version: $VERSION"
          
          # Validate that we got the expected version
          if [ "$VERSION" != "0.9.3" ]; then
            echo "Error: Expected version 0.9.3, got $VERSION"
            exit 1
          fi
          echo "✅ Test passed: Version detected as $VERSION"
